{"version":3,"file":"static/js/12.307d3431.chunk.js","mappings":"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","sources":["components/FormPage.jsx","hooks/useForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { Grid, Modal, useMediaQuery, useTheme, Button } from '@mui/material';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Typography from '@mui/material/Typography';\nimport LoginImg from '../images/formPageImages/login-image.png';\nimport useForm from '../hooks/useForm';\nimport axios from 'axios';\nimport buttonProperties from './tools/buttonProperties';\nimport BackgroudImg from '../images/appImages/background-terror.jpg';\nimport optionsKota from '../components/utils/data-kota.json';\n\nconst getFreshModel = () => ({\n    name: '',\n    telfon: '',\n    kota: null,\n    umur: null\n});\n\nconst validateForm = (formData) => {\n    const errors = {};\n\n    if (!formData.name.trim()) {\n        errors.name = 'Nama harus diisi';\n    }\n\n    if (!formData.telfon.trim()) {\n        errors.telfon = 'Nomor handphone harus diisi';\n    } else if (!/^\\d+$/.test(formData.telfon)) {\n        errors.telfon = 'No. Telfon hanya boleh berisi angka';\n    } else if (formData.telfon.length < 10 || formData.telfon.length > 12) {\n        errors.telfon = 'Nomor handphone harus terdiri dari 12 angka';\n    }\n\n    if (!formData.kota) {\n        errors.kota = 'Domisili harus dipilih';\n    }\n\n    if (!formData.umur) {\n        errors.umur = 'Umur harus dipilih';\n    }\n\n    return errors;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(2),\n        width: '100%',\n        backgroundColor: 'white',\n        borderRadius: 25,\n        marginLeft: '1',\n        height: '40px',\n    },\n    textField: {\n        width: '100%',\n        backgroundColor: 'white',\n        borderRadius: 25,\n        height: '40px',\n    },\n    formContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '500%',\n        padding: '10px',\n        maxWidth: '400px',\n        margin: 'auto',\n    },\n    image: {\n        width: '80%',\n        height: 'auto',\n    },\n    label: {\n        marginBottom: '5px', // Reduced label-input gap\n    },\n}));\n\nconst FormPage = () => {\n\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    const { formData, handleChange } = useForm(getFreshModel);\n    const [errors, setErrors] = useState({});\n\n    const [isFocusedName, setIsFocusedName] = React.useState(false);\n    const [isFocusedPhone, setIsFocusedPhone] = React.useState(false);\n    const [isFocusedCity, setIsFocusedCity] = React.useState(false);\n    const [isFocusedAge, setIsFocusedAge] = React.useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const formErrors = validateForm(formData);\n        setErrors(formErrors);\n\n        if (Object.keys(formErrors).length === 0) {\n            try {\n                const payload = {\n                    name: formData.name,\n                    phone: formData.telfon,\n                    city: formData.kota.label,\n                    age: formData.umur.label\n                };\n\n                const response = await axios.post('https://teror-webapp-server.onrender.com/api/participants', payload);\n\n                if (response.status === 200) {\n                    console.log('Data berhasil disimpan:', response.data);\n                    // navigate('/quiz-page', { state: { participantName: formData.name } });\n                    navigate('/personalized-page', { state: { participantName: formData.name } });\n                } else {\n                    console.error('Gagal menyimpan data');\n                }\n            } catch (error) {\n                console.error('Gagal menyimpan data:', error);\n            }\n        }\n    };\n\n    // const optionsUmur = [];\n    // for (let i = 18; i <= 50; i++) {\n    //     optionsUmur.push({ label: i.toString() });\n    // }\n\n    const optionsUmur = [\n        { label: '18-24' },\n        { label: '25-34' },\n        { label: '35-44' },\n        { label: '45-54' },\n        { label: '55-64' },\n        { label: '65++' }\n    ];\n\n    const [isRitualOpen, setIsRitualOpen] = React.useState(false);\n\n    const openRitualPopup = () => {\n        setIsRitualOpen(true);\n    };\n\n    const closeRitualPopup = () => {\n        setIsRitualOpen(false);\n    };\n\n    return (\n        <form className={classes.formContainer} onSubmit={handleSubmit} style={{ padding: '20px' }}>\n            <img src={LoginImg} alt=\"Ilustrasi login\" className={classes.image} />\n            <Typography\n                style={{ textAlign: 'center', fontWeight: 'bold', fontSize: 20 }}\n                variant=\"h3\"\n                gutterBottom\n            >\n                Apakah kamu selamat dari teror?\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n                Kita kenalan dulu yuk!\n            </Typography>\n\n            {/* Grid container untuk Nama dan No. Telfon */}\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.textField}\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        onFocus={() => setIsFocusedName(true)}\n                        onBlur={() => {\n                            if (!formData.name) {\n                                setIsFocusedName(false);\n                            }\n                        }}\n                        label=\"Nama\"\n                        variant=\"standard\"\n                        error={!!errors.name}\n                        helperText={errors.name ? errors.name : ''}\n                        InputProps={{\n                            disableUnderline: true,\n                            style: {\n                                marginLeft: '20px',\n                                width: '100%',\n                                height: '10px',\n                                marginBottom: '10px',\n                            }\n                        }}\n                        InputLabelProps={{\n                            style: {\n                                marginLeft: '20px',\n                                marginTop: '-10px',\n                                color: isFocusedName ? 'transparent' : 'black'\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.textField}\n                        name=\"telfon\"\n                        value={formData.telfon}\n                        onChange={handleChange}\n                        onFocus={() => setIsFocusedPhone(true)}\n                        onBlur={() => {\n                            if (!formData.name) {\n                                setIsFocusedPhone(false);\n                            }\n                        }}\n                        label=\"Nomor Handphone?\"\n                        variant=\"standard\"\n                        error={!!errors.telfon}\n                        helperText={errors.telfon}\n                        InputProps={{\n                            disableUnderline: true,\n                            style: {\n                                marginLeft: '20px',\n                                width: '100%',\n                                height: '10px',\n                                marginBottom: '10px',\n                            }\n                        }}\n                        InputLabelProps={{\n                            style: {\n                                marginLeft: '20px',\n                                marginTop: '-10px',\n                                color: isFocusedPhone ? 'transparent' : 'black'\n                            }\n                        }}\n                    />\n                </Grid>\n            </Grid>\n\n            {/* Grid container untuk Kota dan Umur */}\n            <Grid container spacing={2} style={{ marginRight: '30px' }}>\n                <Grid item xs={7}>\n                    <Autocomplete\n                        className={classes.formControl}\n                        name=\"kota\"\n                        value={formData.kota}\n                        onChange={(event, newValue) => handleChange({\n                            target: {\n                                name: 'kota',\n                                value: newValue\n                            }\n                        })}\n                        onFocus={() => setIsFocusedCity(true)}\n                        onBlur={() => {\n                            if (!formData.name) {\n                                setIsFocusedCity(false);\n                            }\n                        }}\n                        options={optionsKota}\n                        autoHighlight\n                        renderInput={(params) => (\n                            <React.Fragment>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <TextField\n                                        {...params}\n                                        label=\"Domisili\"\n                                        variant=\"standard\"\n                                        error={!!errors.kota}\n                                        helperText={errors.kota}\n                                        InputProps={{\n                                            ...params.InputProps, disableUnderline: true,\n                                            style: {\n                                                marginLeft: '20px',\n                                                marginTop: '-1px', width: '80%',\n                                                height: '40px'\n                                            }\n                                        }}\n                                        InputLabelProps={{\n                                            style: {\n                                                marginLeft: '20px',\n                                                marginTop: '-10px',\n                                                color: isFocusedCity ? 'transparent' : 'black'\n                                            }\n                                        }}\n                                    />\n                                    {/* <Divider orientation=\"vertical\" flexItem style={{ backgroundColor: 'yellow', height: 'auto' }} /> */}\n                                </div>\n                            </React.Fragment>\n                        )}\n                    />\n                </Grid>\n                <Grid item xs={5}>\n                    <Autocomplete\n                        className={classes.formControl}\n                        name=\"umur\"\n                        value={formData.umur}\n                        onChange={(event, newValue) => handleChange({ target: { name: 'umur', value: newValue } })}\n                        onFocus={() => setIsFocusedAge(true)}\n                        onBlur={() => {\n                            if (!formData.name) {\n                                setIsFocusedAge(false);\n                            }\n                        }}\n                        options={optionsUmur}\n                        autoHighlight\n                        renderInput={(params) => <TextField {...params} label=\"Umur\"\n                            variant=\"standard\"\n                            error={!!errors.umur}\n                            helperText={errors.umur}\n                            InputProps={{\n                                ...params.InputProps, disableUnderline: true,\n                                style: {\n                                    marginLeft: '20px',\n                                    marginTop: '-1px', width: '80%',\n                                    height: '40px'\n                                }\n                            }}\n                            InputLabelProps={{\n                                style: {\n                                    marginLeft: '20px',\n                                    marginTop: '-10px',\n                                    color: isFocusedAge ? 'transparent' : 'black',\n                                }\n                            }}\n                        />}\n                    />\n                </Grid>\n            </Grid>\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{\n                    ...buttonProperties, display: 'flex',\n                    justifyContent: 'center',\n                    marginTop: '20px'\n                }}>\n                Masuk\n            </Button>\n            <Button\n                variant='outlined'\n                onClick={openRitualPopup}\n                sx={{\n                    borderRadius: '30px',\n                    width: 'auto',\n                    height: 'auto',\n                    color: 'white',\n                    borderColor: 'white',\n                    marginTop: '25px',\n                    marginRight: '7px',\n                    '&:hover': {\n                        borderColor: 'white', // Set the same color as default\n                    },\n                    '@media (min-width: 768px)': { // Media query for screens wider than 768px (typically for laptops/desktops)\n                        width: '40%', // Set width to 40% for laptops/desktops\n                    },\n                }}\n                className={classes.ritualButton}\n            >\n                PANDUAN RITUAL\n            </Button>\n\n            <Modal open={isRitualOpen}\n                onClose={() => setIsRitualOpen(false)}\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    padding: 20\n                }}>\n                <div style={{\n                    padding: 50,\n                    margin: isMobile ? 0 : 350,\n                    borderRadius: '20px',\n                    backgroundImage: `url(${BackgroudImg})`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    color: 'white',\n                    position: 'relative',\n                }}>\n                    <h2 style={{ margin: '3px 0', color: '#D32027', fontFamily: 'Spot, Poppins', fontWeight: 'bold', textAlign: 'center' }}>PANDUAN RITUAL</h2>\n                    <p style={{ margin: '0px 0', fontSize: isMobile ? 12 : 16 }}>1. Pilih jawaban dari 8 pertanyaan yang kamu rasain saat ini</p>\n                    <p style={{ margin: '0px 0', fontSize: isMobile ? 12 : 16 }}>2. Kalo udah selesai terisi, kamu bakal dapat hasil Teror Card tentang jenis teror penunggu lambung kamu</p>\n                    <p style={{ margin: '0px 0', fontSize: isMobile ? 12 : 16 }}>3. Jangan lupa, setelah muncul Teror Card, klik tombol simpan dan bagikan Teror Cardmu lewat Instagram story dengan mention @freshmag.id dengan hashtag\n                        <span style={{ fontWeight: 'bold', fontSize: isMobile ? 12 : 16 }}> #TerorLambung</span>\n                        dan\n                        <span style={{ fontWeight: 'bold', fontSize: isMobile ? 12 : 16 }}> #KenaliTerormu</span></p>\n                    <p style={{ margin: '0px 0', fontSize: isMobile ? 12 : 16 }}>4. Bakal ada hadiah menarik dari Freshmag, info lebih lanjut follow IG @freshmag.id</p>\n                    <p style={{ margin: '0px 0', fontSize: isMobile ? 12 : 16 }}>5. Periode kuis berlaku hingga 30 April 2024</p>\n                    <p style={{ margin: '20px 0', fontSize: isMobile ? 12 : 16, textAlign: 'center' }}>\n                        <span style={{ fontWeight: 'bold', fontSize: isMobile ? 12 : 16 }}>Selamat menjalankan ritualmu!</span></p>\n                    <Button variant=\"contained\" color=\"primary\" onClick={closeRitualPopup}\n                        style={{\n                            ...buttonProperties,\n                            margin: 'auto', // Membuat tombol berada di tengah secara horizontal\n                            position: 'absolute', // Membuat tombol menjadi absolut\n                            bottom: '-40px', // Menyesuaikan posisi tombol agar berada di luar modal\n                            left: '50%', // Menengahkan tombol secara horizontal\n                            transform: 'translate(-50%, -50%)' // Menyesuaikan posisi tombol agar tepat di tengah \n                        }}>\n                        Mengerti\n                    </Button>\n                </div>\n            </Modal>\n        </form>\n    );\n};\n\nexport default FormPage;","import { useState } from 'react';\n\n// Buat hook useForm dengan kemampuan validasi dan reset\nexport default function useForm(getFreshModelObject, validateForm) {\n    const [formData, setFormData] = useState(getFreshModelObject());\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n        // Validasi setiap kali ada perubahan nilai input\n        if (validateForm) {\n            const validationErrors = validateForm(formData);\n            setErrors(validationErrors);\n        }\n    };\n\n    const resetForm = () => {\n        setFormData(getFreshModelObject());\n        setErrors({});\n    };\n\n    return {\n        formData,\n        setFormData,\n        handleChange,\n        errors,\n        resetForm\n    };\n}\n"],"names":["getFreshModel","name","telfon","kota","umur","useStyles","makeStyles","theme","formControl","margin","spacing","width","backgroundColor","borderRadius","marginLeft","height","textField","formContainer","display","flexDirection","alignItems","padding","maxWidth","image","label","marginBottom","FormPage","useTheme","isMobile","useMediaQuery","breakpoints","down","classes","navigate","useNavigate","formData","handleChange","getFreshModelObject","validateForm","setFormData","useState","errors","setErrors","e","target","value","validationErrors","resetForm","useForm","isFocusedName","setIsFocusedName","React","isFocusedPhone","setIsFocusedPhone","isFocusedCity","setIsFocusedCity","isFocusedAge","setIsFocusedAge","isRitualOpen","setIsRitualOpen","_jsxs","className","onSubmit","async","preventDefault","formErrors","trim","test","length","Object","keys","payload","phone","city","age","response","axios","post","status","console","log","data","state","participantName","error","style","children","_jsx","src","LoginImg","alt","Typography","textAlign","fontWeight","fontSize","variant","gutterBottom","Grid","container","item","xs","TextField","onChange","onFocus","onBlur","helperText","InputProps","disableUnderline","InputLabelProps","marginTop","color","marginRight","Autocomplete","event","newValue","options","optionsKota","autoHighlight","renderInput","params","Button","type","buttonProperties","justifyContent","onClick","openRitualPopup","sx","borderColor","ritualButton","Modal","open","onClose","backgroundImage","concat","BackgroudImg","backgroundSize","backgroundPosition","position","fontFamily","closeRitualPopup","bottom","left","transform"],"sourceRoot":""}