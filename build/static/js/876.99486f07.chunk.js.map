{"version":3,"file":"static/js/876.99486f07.chunk.js","mappings":"yVASA,MA+EA,EA/EkBA,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAGzDK,EAAAA,EAAAA,YAAU,KACJF,GACFZ,EAAOO,EACT,GACC,CAACK,EAAkBZ,EAAQO,IAE9B,MAAMQ,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MACpCR,EAAUM,GACVJ,GAAoB,GAEpB,IAAIO,EAAiB,EACrB,OAAQH,GACN,IAAK,QACHG,EAAiB,EACjB,MACF,IAAK,aACHA,EAAiB,EACjB,MACF,IAAK,YACHA,EAAiB,EACjB,MACF,QACEA,EAAiB,EAErBZ,EAAUY,GACVC,QAAQC,IAAI,sBAAuBF,EAAe,EAOpD,OACEG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAkBC,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAE7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAASuB,SAAC,uHAIzEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUE,WAAY,OAAQD,SAAUjC,EAAW,OAAS,QAASuB,SAAC,oBAC7FH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,UAAX7B,EAAqB,UAAY,QAASe,QAAS,OAAQe,MAAkB,UAAX9B,EAAqB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACpPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,QAAQ0B,QAAoB,UAAXnC,EAAoBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,sDAE/HpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,eAAX7B,EAA0B,UAAY,QAASe,QAAS,OAAQe,MAAkB,eAAX9B,EAA0B,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAC9PC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,aAAa0B,QAAoB,eAAXnC,EAAyBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,6CAEzIpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,cAAX7B,EAAyB,UAAY,QAASe,QAAS,OAAQe,MAAkB,cAAX9B,EAAyB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAC5PC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,YAAY0B,QAAoB,cAAXnC,EAAwBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,yCAEvIpB,EAAAA,EAAAA,KAAA,cAYN,E,6DCoBV,EAhGkB5B,IAA6B,IAA5B,OAAEC,EAAM,WAAEgD,GAAYjD,EACvC,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAGzDK,EAAAA,EAAAA,YAAU,KACJF,GACFZ,EAAOO,EACT,GACC,CAACK,EAAkBZ,EAAQO,IAE9B,MAAMQ,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MACpCR,EAAUM,GACVJ,GAAoB,GAEpB,IAAIO,EAAiB,EACrB,OAAQH,GACN,IAAK,UACHG,EAAiB,EACjB,MACF,IAAK,UACHA,EAAiB,EACjB,MACF,IAAK,QACHA,EAAiB,EACjB,MACF,QACEA,EAAiB,EAErBZ,EAAUY,GACVC,QAAQC,IAAI,sBAAuBF,EAAe,EAmBpD,OACEG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKqB,EAAkBnB,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAG7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAASuB,SAAC,yQAMzEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUE,WAAY,OAAQD,SAAUjC,EAAW,OAAS,QAASuB,SAAC,sBAE7FH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,YAAX7B,EAAuB,UAAY,QAASe,QAAS,OAAQe,MAAkB,YAAX9B,EAAuB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACxPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,UAAU0B,QAAoB,YAAXnC,EAAsBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,kBAEnIpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,YAAX7B,EAAuB,UAAY,QAASe,QAAS,OAAQe,MAAkB,YAAX9B,EAAuB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACxPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,UAAU0B,QAAoB,YAAXnC,EAAsBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,4CAEnIpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,UAAX7B,EAAqB,UAAY,QAASe,QAAS,OAAQe,MAAkB,UAAX9B,EAAqB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACpPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,QAAQ0B,QAAoB,UAAXnC,EAAoBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,iDAE/HpB,EAAAA,EAAAA,KAAA,cAaN,E,6DCCV,EA7FkB5B,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAGzDK,EAAAA,EAAAA,YAAU,KACJF,GACFZ,EAAOO,EACT,GACC,CAACK,EAAkBZ,EAAQO,IAE9B,MAAMQ,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MACpCR,EAAUM,GACVJ,GAAoB,GAEpB,IAAIO,EAAiB,EACrB,OAAQH,GACN,IAAK,QACHG,EAAiB,EACjB,MACF,IAAK,SACHA,EAAiB,EACjB,MACF,IAAK,SACHA,EAAiB,EACjB,MACF,QACEA,EAAiB,EAErBZ,EAAUY,GACVC,QAAQC,IAAI,sBAAuBF,EAAe,EAmBpD,OACEG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKsB,EAAkBpB,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAG7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAAQuB,SAAC,6GAExEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUE,WAAY,OAAQD,SAAUjC,EAAW,OAAS,QAASuB,SAAC,2CAE7FH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,UAAX7B,EAAqB,UAAY,QAASe,QAAS,OAAQe,MAAkB,UAAX9B,EAAqB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACpPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,QAAQ0B,QAAoB,UAAXnC,EAAoBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,wBAE/HpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,WAAX7B,EAAsB,UAAY,QAASe,QAAS,OAAQe,MAAkB,WAAX9B,EAAsB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,SAAS0B,QAAoB,WAAXnC,EAAqBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,+CAEjIpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,WAAX7B,EAAsB,UAAY,QAASe,QAAS,OAAQe,MAAkB,WAAX9B,EAAsB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,SAAS0B,QAAoB,WAAXnC,EAAqBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,wDAEjIpB,EAAAA,EAAAA,KAAA,cAcN,E,2FCsBV,EA/GkB5B,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClD0C,EAAcC,IAAmB3C,EAAAA,EAAAA,WAAS,GAQ3CM,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MACpCR,EAAUM,GACVJ,GAAoB,GAEpB,IAAIO,EAAiB,EACrB,OAAQH,GACN,IAAK,QASL,QACEG,EAAiB,QAPnB,IAAK,SACHA,EAAiB,EACjB,MACF,IAAK,SACHA,EAAiB,EAKrBZ,EAAUY,GACVC,QAAQC,IAAI,sBAAuBF,EAAe,EAmBpD,OACEG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKyB,EAAkBvB,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAG7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAASuB,SAAC,6IAIzEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUE,WAAY,OAAQD,SAAUjC,EAAW,OAAS,QAASuB,SAAC,sCAC7FH,EAAAA,EAAAA,MAAA,QAAM+B,SA1BYtC,IACpBA,EAAMuC,iBAED3C,GAKLZ,EAAOO,GACPc,QAAQC,IAAI,gBAAiBf,IAL3B6C,GAAgB,EAKkB,EAiBL1B,SAAA,EAE3BH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,UAAX7B,EAAqB,UAAY,QAASe,QAAS,OAAQe,MAAkB,UAAX9B,EAAqB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACpPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,QAAQ0B,QAAoB,UAAXnC,EAAoBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,2BAE/HpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,WAAX7B,EAAsB,UAAY,QAASe,QAAS,OAAQe,MAAkB,WAAX9B,EAAsB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,SAAS0B,QAAoB,WAAXnC,EAAqBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,wBAEjIpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,WAAX7B,EAAsB,UAAY,QAASe,QAAS,OAAQe,MAAkB,WAAX9B,EAAsB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtPC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,QAAQC,KAAK,SAASzB,MAAM,SAAS0B,QAAoB,WAAXnC,EAAqBoC,SAAU/B,EAAoBgC,UAAU,gBAAgB,yEAEjIpB,EAAAA,EAAAA,KAAA,UACRA,EAAAA,EAAAA,KAAA,SAAOH,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAA4B,KAAX7B,GAA4B,UAAXA,GAAiC,WAAXA,GAAkC,WAAXA,EAAsB,UAAY,QAASe,QAAS,OACjNe,MAAkB,KAAX9B,GAA4B,UAAXA,GAAiC,WAAXA,GAAkC,WAAXA,EAAqB,QAAU,QAAS+B,aAAc,OAAQC,aAAc,QAAShB,UACxJC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,KAAK,SACLE,SAAU/B,EACVyC,YAAY,wCACZhC,MAAO,CACLO,MAAO,OACP0B,OAAQ,OACRC,QAAS,OACTtB,SAAUjC,EAAW,OAAS,OAC9BgC,UAAW,SACXwB,WAAY,oBAGVhC,EAAAA,EAAAA,KAAA,UACRA,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACjB,KAAK,SAASnB,MAAO,IAAKqC,EAAAA,EAAkBrB,MAAO,QAASP,QAAS,QAASC,OAAQ,SAAU4B,UAAW,QAASpC,SAAC,mBAE/HC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CACPC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMhB,EACNiB,iBAAkB,IAClBC,QAtDsBC,KAC1BlB,GAAgB,EAAM,EAsDlBmB,QAAQ,2CAEN,E,6DCKV,EAhHkBxE,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9B+D,EAASC,IAAchE,EAAAA,EAAAA,UAAS,KAChCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClD0C,EAAcC,IAAmB3C,EAAAA,EAAAA,WAAS,GAE3CM,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MAC9BuD,EAAY1D,EAAME,OAAO2B,QAC/BhC,GAAoB,GAEpB,IAAI8D,EAAiB,IAAIH,GAErBE,IAAcC,EAAeC,SAAS3D,GACxC0D,EAAeE,KAAK5D,IACVyD,GAAaC,EAAeC,SAAS3D,KAC/C0D,EAAiBA,EAAeG,QAAOpE,GAAUA,IAAWO,KAG9DwD,EAAWE,EAAe,EA4C5B,OACEpD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKmD,EAAkBjD,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAE7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAAQuB,SAAC,sLAIxEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,OAAQkC,WAAY,QAASX,SAAC,4CAC7FH,EAAAA,EAAAA,MAAA,QAAM+B,SAlDYtC,IACpBA,EAAMuC,iBAGN,IAAInC,EAAiB,EACrBoD,EAAQQ,SAAQtE,IACd,OAAQA,GACN,IAAK,OAGL,IAAK,QAGL,IAAK,YAGL,IAAK,UAGL,IAAK,QACHU,GAAkB,EAClB,MACF,QACEA,GAAkB,EACtB,IAEFZ,EAAUY,GAEa,IAAnBA,GAKJpB,EAAOoB,GACPC,QAAQC,IAAI,gBAAiBF,IAL3BgC,GAAgB,EAK0B,EAgBb1B,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,QAAU,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,QAAU,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAChQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,OAAO0B,QAAS2B,EAAQI,SAAS,QAAS9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,WAE1IpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,SAAW,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,SAAW,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAClQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,QAAQ0B,QAAS2B,EAAQI,SAAS,SAAU9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,uBAE5IpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,aAAe,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,aAAe,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAC1QC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,YAAY0B,QAAS2B,EAAQI,SAAS,aAAc9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,qBAEpJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,SAAW,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,SAAW,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAClQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,QAAQ0B,QAAS2B,EAAQI,SAAS,SAAU9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,iBAE5IpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,WAAa,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,WAAa,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,UAAU0B,QAAS2B,EAAQI,SAAS,WAAY9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,wCAEhJpB,EAAAA,EAAAA,KAAA,UACRA,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACjB,KAAK,SAASnB,MAAO,IAAKqC,EAAAA,EAAkBrB,MAAO,QAASP,QAAS,QAASC,OAAQ,UAAWR,SAAC,mBAE5GC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CACPC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMhB,EACNiB,iBAAkB,IAClBC,QA3CsBC,KAC1BlB,GAAgB,EAAM,EA2ClBmB,QAAQ,2CAEN,E,6DCFV,EA1GkBxE,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9B+D,EAASC,IAAchE,EAAAA,EAAAA,UAAS,KAChCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClD0C,EAAcC,IAAmB3C,EAAAA,EAAAA,WAAS,GAE3CM,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MAC9BuD,EAAY1D,EAAME,OAAO2B,QAC/BhC,GAAoB,GAEpB,IAAI8D,EAAiB,IAAIH,GAErBE,IAAcC,EAAeC,SAAS3D,GACxC0D,EAAeE,KAAK5D,IACVyD,GAAaC,EAAeC,SAAS3D,KAC/C0D,EAAiBA,EAAeG,QAAOpE,GAAUA,IAAWO,KAG9DwD,EAAWE,EAAe,EAyC5B,OAEEpD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKqD,EAAkBnD,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAE7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAASuB,SAAC,sIAIzEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,OAAQkC,WAAY,QAASX,SAAC,4CAC7FH,EAAAA,EAAAA,MAAA,QAAM+B,SAhDYtC,IACpBA,EAAMuC,iBAGN,IAAInC,EAAiB,EACrBoD,EAAQQ,SAAQtE,IACd,OAAQA,GACN,IAAK,UAGL,IAAK,WAGL,IAAK,UAGL,IAAK,eACHU,GAAkB,EAClB,MACF,QACEA,GAAkB,EACtB,IAEFZ,EAAUY,GAEa,IAAnBA,GAKJpB,EAAOoB,GACPC,QAAQC,IAAI,gBAAiBF,IAL3BgC,GAAgB,EAK0B,EAiBb1B,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,WAAa,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,WAAa,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,UAAU0B,QAAS2B,EAAQI,SAAS,WAAY9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,yBAEhJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,YAAc,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,YAAc,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACxQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,WAAW0B,QAAS2B,EAAQI,SAAS,YAAa9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,gDAElJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,WAAa,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,WAAa,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,UAAU0B,QAAS2B,EAAQI,SAAS,WAAY9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,0DAEhJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,gBAAkB,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,gBAAkB,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAChRC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,eAAe0B,QAAS2B,EAAQI,SAAS,gBAAiB9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,6BAE1JpB,EAAAA,EAAAA,KAAA,UACRA,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACjB,KAAK,SAASnB,MAAO,IAAKqC,EAAAA,EAAkBrB,MAAO,QAASP,QAAS,QAASC,OAAQ,UAAWR,SAAC,mBAE5GC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CACPC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMhB,EACNiB,iBAAkB,IAClBC,QAxCsBC,KAC1BlB,GAAgB,EAAM,EAwClBmB,QAAQ,2CAEN,E,6DCIV,EA1GkBxE,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9B+D,EAASC,IAAchE,EAAAA,EAAAA,UAAS,KAChCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClD0C,EAAcC,IAAmB3C,EAAAA,EAAAA,WAAS,GAE3CM,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MAC9BuD,EAAY1D,EAAME,OAAO2B,QAC/BhC,GAAoB,GAEpB,IAAI8D,EAAiB,IAAIH,GAErBE,IAAcC,EAAeC,SAAS3D,GACxC0D,EAAeE,KAAK5D,IACVyD,GAAaC,EAAeC,SAAS3D,KAC/C0D,EAAiBA,EAAeG,QAAOpE,GAAUA,IAAWO,KAG9DwD,EAAWE,EAAe,EAyC5B,OACEpD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKsD,EAAkBpD,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAE7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAASuB,SAAC,oPAKzEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,OAAQkC,WAAY,QAASX,SAAC,4CAC7FH,EAAAA,EAAAA,MAAA,QAAM+B,SAhDYtC,IACpBA,EAAMuC,iBAGN,IAAInC,EAAiB,EACrBoD,EAAQQ,SAAQtE,IACd,OAAQA,GACN,IAAK,YAGL,IAAK,MAGL,IAAK,WAGL,IAAK,SACHU,GAAkB,EAClB,MACF,QACEA,GAAkB,EACtB,IAEFZ,EAAUY,GAEa,IAAnBA,GAKJpB,EAAOoB,GACPC,QAAQC,IAAI,gBAAiBF,IAL3BgC,GAAgB,EAK0B,EAiBb1B,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,aAAe,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,aAAe,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAC1QC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,YAAY0B,QAAS2B,EAAQI,SAAS,aAAc9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,mDAEpJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,YAAc,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,YAAc,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACxQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,WAAW0B,QAAS2B,EAAQI,SAAS,YAAa9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,yBAElJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,OAAS,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,OAAS,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAC9PC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,MAAM0B,QAAS2B,EAAQI,SAAS,OAAQ9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,iCAExIpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,UAAY,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,UAAY,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACpQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,SAAS0B,QAAS2B,EAAQI,SAAS,UAAW9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,gDAE9IpB,EAAAA,EAAAA,KAAA,UACRA,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACjB,KAAK,SAASnB,MAAO,IAAKqC,EAAAA,EAAkBrB,MAAO,QAASP,QAAS,QAASC,OAAQ,UAAWR,SAAC,mBAE5GC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CACPC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMhB,EACNiB,iBAAkB,IAClBC,QAxCsBC,KAC1BlB,GAAgB,EAAM,EAwClBmB,QAAQ,2CAEN,E,6DCGV,EAzGkBxE,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE/CC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC9B+D,EAASC,IAAchE,EAAAA,EAAAA,UAAS,KAChCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClD0C,EAAcC,IAAmB3C,EAAAA,EAAAA,WAAS,GAE3CM,EAAsBC,IAC1B,MAAMC,EAAiBD,EAAME,OAAOC,MAC9BuD,EAAY1D,EAAME,OAAO2B,QAC/BhC,GAAoB,GAEpB,IAAI8D,EAAiB,IAAIH,GAErBE,IAAcC,EAAeC,SAAS3D,GACxC0D,EAAeE,KAAK5D,IACVyD,GAAaC,EAAeC,SAAS3D,KAC/C0D,EAAiBA,EAAeG,QAAOpE,GAAUA,IAAWO,KAG9DwD,EAAWE,EAAe,EAyC5B,OACEpD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKuD,EAAkBrD,IAAI,SAASN,MAAO,CAAEO,MAAO,MAAOC,SAAU,QAASC,QAAS,QAASC,OAAQ,kBAE7GP,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,QAASuB,SAAC,2KAGzEC,EAAAA,EAAAA,KAAA,KAAGH,MAAO,CAAEW,UAAW,SAAUC,SAAUjC,EAAW,OAAS,OAAQkC,WAAY,QAASX,SAAC,kCAE7FH,EAAAA,EAAAA,MAAA,QAAM+B,SA/CYtC,IACpBA,EAAMuC,iBAGN,IAAInC,EAAiB,EACrBoD,EAAQQ,SAAQtE,IACd,OAAQA,GACN,IAAK,QAGL,IAAK,UAGL,IAAK,WAGL,IAAK,aACHU,GAAkB,EAClB,MACF,QACEA,GAAkB,EACtB,IAEFZ,EAAUY,GAEa,IAAnBA,GAKJpB,EAAOoB,GACPC,QAAQC,IAAI,gBAAiBF,IAL3BgC,GAAgB,EAK0B,EAgBb1B,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,SAAW,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,SAAW,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAClQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,QAAQ0B,QAAS2B,EAAQI,SAAS,SAAU9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,iBAE5IpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,WAAa,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,WAAa,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACtQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,UAAU0B,QAAS2B,EAAQI,SAAS,WAAY9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,0BAEhJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,YAAc,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,YAAc,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EACxQC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,WAAW0B,QAAS2B,EAAQI,SAAS,YAAa9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,eAElJpB,EAAAA,EAAAA,KAAA,UACRJ,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEW,UAAW,SAAUF,QAAS,QAASK,aAAc,QAASC,gBAAiBiC,EAAQI,SAAS,cAAgB,UAAY,QAASnD,QAAS,OAAQe,MAAOgC,EAAQI,SAAS,cAAgB,QAAU,QAASnC,aAAc,OAAQC,aAAc,QAAShB,SAAA,EAC5QC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,WAAWC,KAAK,SAASzB,MAAM,aAAa0B,QAAS2B,EAAQI,SAAS,cAAe9B,SAAU/B,EAAoBgC,UAAU,mBAAmB,gCAEtJpB,EAAAA,EAAAA,KAAA,UACRA,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACjB,KAAK,SAASnB,MAAO,IAAKqC,EAAAA,EAAkBrB,MAAO,QAASP,QAAS,QAASC,OAAQ,UAAWR,SAAC,mBAE5GC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CACPC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMhB,EACNiB,iBAAkB,IAClBC,QAvCsBC,KAC1BlB,GAAgB,EAAM,EAuClBmB,QAAQ,2CAEN,E,kCChFV,MAAMa,GAAYC,EAAAA,EAAAA,IAAYpF,IAAK,CACjCqF,KAAM,CACJrD,QAAS,OACTsD,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,QACXjE,QAASxB,EAAM0F,QAAQ,GACvBC,SAAU,YAEZC,QAAS,CACPtD,gBAAiB,cACjBqD,SAAU,WACVE,IAAK,SAEPC,kBAAmB,CACjBjC,UAAW7D,EAAM0F,QAAQ,IACzBlE,QAAS,QACT,CAACxB,EAAMI,YAAYC,KAAK,OAAQ,CAC9BmB,QAAS,MAGbuE,kBAAmB,CACjBjE,MAAO,OACPkE,OAAQ,OACRL,SAAU,WACVE,IAAK,MACLI,KAAM,MACNC,UAAW,yBAEbC,kBAAmB,CACjBrE,MAAO,OACPkE,OAAQ,OACRL,SAAU,WACVE,IAAK,MACLI,KAAM,MACNC,UAAW,yBAEbE,mBAAoB,CAClBtE,MAAO,OACPkE,OAAQ,OACRL,SAAU,WACVE,IAAK,MACLI,KAAM,OACNC,UAAW,yBAEbG,WAAY,CACVV,SAAU,WACVW,OAAQ,OACRL,KAAM,YAgPV,EA5OiBM,KAEf,MAAMvG,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAEhDmG,EAAUrB,IACVsB,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkBpG,EAAAA,EAAAA,UAAS,IACxCqG,EAAaC,IAAkBtG,EAAAA,EAAAA,WAAS,IACxCuG,EAAiBC,IAAsBxG,EAAAA,EAAAA,WAAS,IAChDyG,EAAaC,IAAkB1G,EAAAA,EAAAA,UAAS,IACxC2G,EAAUC,IAAe5G,EAAAA,EAAAA,UAAS,IAClC6G,EAAgBC,IAAqB9G,EAAAA,EAAAA,UAAS,OAC9C+G,EAAmBC,IAAwBhH,EAAAA,EAAAA,UAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAE3E,MAAEiH,IAAUC,EAAAA,EAAAA,MACZC,EAAkBF,EAAQA,EAAME,gBAAkB,GAGlDC,EAA2BC,MAAOvH,EAAQG,KAE9CmG,GAAgBkB,GAAaA,EAAW,IACxCZ,GAAgBa,GAAeA,EAAazH,IAC5C,MAAM0H,EAAqBf,EAAc3G,EAGzC,GAAoB,IAAhBqG,EAAmB,CAGrB,MAAMsB,EAAwBD,EAAqBT,EAAkBW,QAAO,CAACC,EAAKC,IAAQD,EAAMC,GAAK,GAC/FC,EAA2B,IAAId,GACrCc,EAAyB1B,GAAesB,EAGxCnB,GAAe,GACfE,GAAmB,GAEnB,IAU0B,aARDsB,EAAAA,EAAMC,KAAK,sDAAuD,CACvF5F,KAAMgF,EACNrH,OAAQ0H,EAERT,kBAAmBc,KAIRG,OACXpH,QAAQC,IAAI,sCAEZD,QAAQqH,MAAM,uBAElB,CAAE,MAAOA,GAEPrH,QAAQqH,MAAM,wBAAyBA,EAAMnE,QAC/C,CAGAoE,YAAW,KACTjC,EAAS,eAAgB,CAAEgB,MAAO,CAAEE,gBAAiBA,EAAiBV,YAAae,IAAuB,GACzG,IACL,MACEV,EAAkB7G,GAClB+G,GAAsBO,IACpB,MAAMY,EAAY,IAAIZ,GACtBY,EAAUhC,GAAerG,EACzBc,QAAQC,IAAI,eAAgBsF,GAC5BvF,QAAQC,IAAI,iCAAkCsH,GAG9C,IACEL,EAAAA,EAAMC,KAAK,sDAAuD,CAChE5F,KAAMgF,EACNrH,OAAQ0H,EACRT,kBAAmBoB,IAClBC,MAAMC,IACiB,MAApBA,EAASL,OACXpH,QAAQC,IAAI,sCAEZD,QAAQqH,MAAM,uBAChB,GAEJ,CAAE,MAAOA,GACPrH,QAAQqH,MAAM,wBAAyBA,EAAMnE,QAC/C,CAEA,OAAOqE,CAAS,GAEpB,EAGIG,EAAiBA,KACjBnC,EAAc,IAChBC,EAAeD,EAAc,GAC7BO,GAAgB6B,GAAcA,EAAYxB,EAAkBZ,EAAc,KAC5E,EAKIqC,EAAqB,EACzBtH,EAAAA,EAAAA,KAACuH,EAAS,CAAClJ,OAAQ6H,EAA0B7E,WAAY+F,KACzDpH,EAAAA,EAAAA,KAACwH,EAAS,CAACnJ,OAAQ6H,EAA0B7E,WAAY+F,KACzDpH,EAAAA,EAAAA,KAACyH,EAAS,CAACpJ,OAAQ6H,EAA0B7E,WAAY+F,KACzDpH,EAAAA,EAAAA,KAAC0H,EAAS,CAACrJ,OAAQ6H,EAA0B7E,WAAY+F,KACzDpH,EAAAA,EAAAA,KAAC2H,EAAS,CAACtJ,OAAQ6H,EAA0B7E,WAAY+F,KACzDpH,EAAAA,EAAAA,KAAC4H,EAAS,CAACvJ,OAAQ6H,EAA0B7E,WAAY+F,KACzDpH,EAAAA,EAAAA,KAAC6H,EAAS,CAACxJ,OAAQ6H,EAA0B7E,WAAY+F,KACzDpH,EAAAA,EAAAA,KAAC8H,EAAS,CAACzJ,OAAQ6H,EAA0B7E,WAAY+F,KAIrDW,EAAgB3J,IAA4B,IAA3B,OAAE4J,EAAM,UAAEC,GAAW7J,EAE1C,MAAM8J,EAAWF,GAA6BC,EAApB,kBAAoD,oBAC9E,OAEEjI,EAAAA,EAAAA,KAAA,OAAKC,IAAKiI,EAAU/H,IAAI,GAAGN,MAAO,CAAEO,MAAO5B,EAAW,OAAS,OAAQ8F,OAAQ,SAAY,EAazF6D,GAAuBC,EAAAA,EAAAA,GATd,CACbC,aAAc,CACZzH,gBAAiB,SAEnB0H,gBAAiB,CACf1H,gBAAiB,QAIQwH,CAAmBG,EAAAA,GAE1CC,GAAiBJ,EAAAA,EAAAA,GAAW,CAChCK,iBAAkB,CAChBtE,IAAK3F,EAAW,EAAI,EACpB+F,KAAM/F,EAAW,mBAAqB,oBACtCkK,MAAOlK,EAAW,kBAAoB,oBAExCwJ,OAAQ,CACN,UAAW,CACTW,YAAa,YAGjBV,UAAW,CACT,UAAW,CACTU,YAAa,YAGjBC,KAAM,CACJD,YAAa,OACbE,eAAgB,EAChB/H,aAAc,EACdV,MAAO5B,EAAW,oBAAsB,oBACxCsK,WAAYtK,EAAW,OAAS,SArBb4J,CAuBpBW,EAAAA,IAGH5J,EAAAA,EAAAA,YAAU,KACR,IAAI6J,EAsBJ,OArBI7D,GAAeE,IACjB2D,EAAWC,aAAY,KACrBvD,GAAawD,IAKX,IAAIC,EASJ,OAbqB,MAAjBD,GACFE,cAAcJ,GAOdG,EADED,GAAgB,GACK,EAAhBG,KAAKC,SAEW,GAAhBD,KAAKC,SAGPD,KAAKE,IAAIL,EAAeC,EAAM,IAAI,GACzC,GACD,MAGE,KACLC,cAAcJ,EAAS,CACxB,GACA,CAAC7D,EAAaE,IAEjB,MAAMmE,GAAuBrE,EAE7B,OACEvF,EAAAA,EAAAA,MAAA,OAAKwB,UAAW0D,EAAQnB,KAAK5D,SAAA,CAC1ByJ,IACCxJ,EAAAA,EAAAA,KAACyJ,EAAAA,EAAO,CAACC,WAAYzE,EAAa7D,UAAW0D,EAAQZ,QAASuE,kBAAgB,EAACkB,WAAW3J,EAAAA,EAAAA,KAACwI,EAAc,IAAIzI,SA7FrG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IA8F5B6J,KAAI,CAACC,EAAOC,KACjB9J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAI,CAAAhK,UACHC,EAAAA,EAAAA,KAACgK,EAAAA,EAAQ,CACPC,MAAMjK,EAAAA,EAAAA,KAAC+H,EAAa,CAACC,OAAQ8B,IAAU7E,EAAagD,UAAW6B,EAAQ7E,OAFhE6E,QAQjBlK,EAAAA,EAAAA,MAAA,OAAKwB,UAAW0D,EAAQV,kBAAkBrE,SAAA,CACvCuH,EAAmBrC,GACnBA,EAAc,IAAME,IACnBnF,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACiI,QAAQ,WACdrJ,MAAM,UACNO,UAAW0D,EAAQH,WAAYwF,QAAS/C,EACxCvH,MAAO,CACLiB,aAAc,OACdD,MAAO,QACP8H,YAAa,QACbvI,MAAO,OACPkE,OAAQ,OACR7D,SAAU,OACVqI,WAAY,QACZ/I,SAAC,kBAIRoF,GAAeE,IACdzF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACoK,EAAAA,EAAU,CACThJ,UAAW0D,EAAQJ,mBAAmB3E,SAAC,4BAGzCC,EAAAA,EAAAA,KAACmI,EAAoB,CACnB+B,QAAQ,cACR1K,MAAOiG,EACPrE,UAAW0D,EAAQT,qBACrBrE,EAAAA,EAAAA,KAAA,OAAKC,IAAKoK,EAAejJ,UAAW0D,EAAQL,kBAAmBtE,IAAI,yBAGnE,C","sources":["components/questions/Question1.jsx","components/questions/Question2.jsx","components/questions/Question3.jsx","components/questions/Question4.jsx","components/questions/Question5.jsx","components/questions/Question6.jsx","components/questions/Question7.jsx","components/questions/Question8.jsx","components/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\n//import { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan1 from '../../images/quizPageImages/PertanyaanImg1.jpg';\n\n\nconst Question1 = ({ onNext }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  //const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  useEffect(() => {\n    if (isAnswerSelected) {\n      onNext(points);\n    }\n  }, [isAnswerSelected, onNext, points]);\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    setAnswer(selectedAnswer);\n    setIsAnswerSelected(true);\n\n    let selectedPoints = 0;\n    switch (selectedAnswer) {\n      case 'engga':\n        selectedPoints = 1;\n        break;\n      case 'sewajarnya':\n        selectedPoints = 2;\n        break;\n      case 'keterusan':\n        selectedPoints = 3;\n        break;\n      default:\n        selectedPoints = 0;\n    }\n    setPoints(selectedPoints);\n    console.log('poin yang dipilih: ', selectedPoints);\n  };\n\n  // const handleSnackbarClose = () => {\n  //   setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  // };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan1} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{ textAlign: 'center', fontWeight: 'bold', fontSize: '20px' }}>Seberapa serem teror yang kamu alami?</h2> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px' }}>Suasana semakin mencekam.\n        Perlahan mulai terasa sesuatu yang berusaha keluar dari tubuhmu.\n        Teror datang. Sendawa.\n      </p>\n      <p style={{ textAlign: 'center', fontWeight: 'Bold', fontSize: isMobile ? '16px' : '18px' }}>Kamu merasa...</p>\n      <form>\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'engga' ? '#D32027' : 'white', padding: '10px', color: answer === 'engga' ? 'white' : 'black', borderRadius: '35px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"engga\" checked={answer === 'engga'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Familiar? Malah susah buat sendawa 🙁\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'sewajarnya' ? '#D32027' : 'white', padding: '10px', color: answer === 'sewajarnya' ? 'white' : 'black', borderRadius: '35px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"sewajarnya\" checked={answer === 'sewajarnya'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Tercekat, angin ketahan gak mau keluar\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'keterusan' ? '#D32027' : 'white', padding: '10px', color: answer === 'keterusan' ? 'white' : 'black', borderRadius: '35px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"keterusan\" checked={answer === 'keterusan'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Kembung dan terteror terus-terusan\n        </label><br />\n      </form>\n      {/* <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      /> */}\n    </div>\n  );\n};\n\nexport default Question1;\n","import React, { useState, useEffect } from 'react';\n//import buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\n//import { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan2 from '../../images/quizPageImages/PertanyaanImg2.jpg';\n\nconst Question2 = ({ onNext, onPrevious }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  //const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  useEffect(() => {\n    if (isAnswerSelected) {\n      onNext(points);\n    }\n  }, [isAnswerSelected, onNext, points]);\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    setAnswer(selectedAnswer);\n    setIsAnswerSelected(true);\n\n    let selectedPoints = 0;\n    switch (selectedAnswer) {\n      case 'kenyang':\n        selectedPoints = 1;\n        break;\n      case 'kembung':\n        selectedPoints = 2;\n        break;\n      case 'sesek':\n        selectedPoints = 3;\n        break;\n      default:\n        selectedPoints = 0;\n    }\n    setPoints(selectedPoints);\n    console.log('poin yang dipilih: ', selectedPoints);\n  };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n\n  //   if (!isAnswerSelected) {\n  //     setSnackbarOpen(true); // Set state Snackbar menjadi true\n  //     return;\n  //   }\n\n  //   onNext(points);\n  //   console.log('Nilai points:', points); \n  // };\n\n  // const handleSnackbarClose = () => {\n  //   setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  // };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan2} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{textAlign: 'center'}}>Seberapa serem teror yang kamu alami?</h2> */}\n      {/* <h3 style={{ textAlign: 'center', fontWeight: 'bold' }}>Kalo abis makan, biasanya kamu..</h3> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px' }}>Suara-suara aneh semakin berdenging di telingamu.\n        Waktu menunjukan pukul 12 malam, tiba-tiba terdengar suara meja diseret.\n        Ternyata diatas meja ada makanan.\n        Suara aneh bergerak mendekatimu meminta untuk makan.\n        Itu ritual yang harus kamu lakukan Selesai makan, \n      </p>\n      <p style={{ textAlign: 'center', fontWeight: 'Bold', fontSize: isMobile ? '16px' : '18px' }}>tiba-tiba kamu..</p>\n      {/* <form onSubmit={handleSubmit}> */}\n      <form>\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'kenyang' ? '#D32027' : 'white', padding: '10px', color: answer === 'kenyang' ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"kenyang\" checked={answer === 'kenyang'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Merasa lega\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'kembung' ? '#D32027' : 'white', padding: '10px', color: answer === 'kembung' ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"kembung\" checked={answer === 'kembung'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Begah, terasa kembung, dan mau muntah\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'sesek' ? '#D32027' : 'white', padding: '10px', color: answer === 'sesek' ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"sesek\" checked={answer === 'sesek'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Begah banget, sampe sesek, dan susah napas\n        </label><br />\n        {/* <Button type=\"submit\" style={{...buttonProperties, color: 'white', display: 'block', margin: '0 auto', marginTop: '50px'}}>Berikutnya</Button> */}\n      </form>\n      {/* <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      /> */}\n    </div>\n  );\n};\n\nexport default Question2;\n","import React, { useState, useEffect } from 'react';\n//import buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\n//import { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan3 from '../../images/quizPageImages/PertanyaanImg3.jpg';\n\nconst Question3 = ({ onNext }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  //const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  useEffect(() => {\n    if (isAnswerSelected) {\n      onNext(points);\n    }\n  }, [isAnswerSelected, onNext, points]);\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    setAnswer(selectedAnswer);\n    setIsAnswerSelected(true);\n\n    let selectedPoints = 0;\n    switch (selectedAnswer) {\n      case 'nggak':\n        selectedPoints = 1;\n        break;\n      case 'pernah':\n        selectedPoints = 2;\n        break;\n      case 'setiap':\n        selectedPoints = 3;\n        break;\n      default:\n        selectedPoints = 0;\n    }\n    setPoints(selectedPoints);\n    console.log('poin yang dipilih: ', selectedPoints);\n  };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n\n  //   if (!isAnswerSelected) {\n  //     setSnackbarOpen(true); // Set state Snackbar menjadi true\n  //     return;\n  //   }\n\n  //   onNext(points);\n  //   console.log('Nilai points:', points); \n  // };\n\n  // const handleSnackbarClose = () => {\n  //   setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  // };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan3} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{textAlign: 'center'}}>Seberapa serem teror yang kamu alami?</h2> */}\n      {/* <h3 style={{ textAlign: 'center', fontWeight: 'bold' }}>Pernah ngalamin dada panas tiba-tiba ga sih?</h3> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px'}}>Seketika rasa panas mulai terasa di ujung kakimu, menjalar cepat sampai terasa rasa terbakar di dadamu.\n      </p>\n      <p style={{ textAlign: 'center', fontWeight: 'Bold', fontSize: isMobile ? '16px' : '18px' }}>Apakah teror ini sering kamu rasakan?</p>\n      {/* <form onSubmit={handleSubmit}> */}\n      <form>\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'nggak' ? '#D32027' : 'white', padding: '10px', color: answer === 'nggak' ? 'white' : 'black', borderRadius: '25px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"nggak\" checked={answer === 'nggak'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Nggak sama sekali\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'pernah' ? '#D32027' : 'white', padding: '10px', color: answer === 'pernah' ? 'white' : 'black', borderRadius: '25px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"pernah\" checked={answer === 'pernah'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Pernah beberapa kali, sampe susah nafas!\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'setiap' ? '#D32027' : 'white', padding: '10px', color: answer === 'setiap' ? 'white' : 'black', borderRadius: '25px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"setiap\" checked={answer === 'setiap'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Sering banget, apalagi selesai makan 🙁\n        </label><br />\n        {/* <Button type=\"submit\" style={{ ...buttonProperties, color: 'white', display: 'block', margin: '0 auto', marginTop: '50px' }}>Berikutnya</Button> */}\n      </form>\n\n      {/* <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      /> */}\n    </div>\n  );\n};\n\nexport default Question3;","import React, { useState, useEffect } from 'react';\nimport buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\nimport { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan4 from '../../images/quizPageImages/PertanyaanImg4.jpg';\n\nconst Question4 = ({ onNext }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  // useEffect(() => {\n  //   if (isAnswerSelected) {\n  //     onNext(points);\n  //   }\n  // }, [isAnswerSelected, onNext, points]);\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    setAnswer(selectedAnswer);\n    setIsAnswerSelected(true);\n\n    let selectedPoints = 0;\n    switch (selectedAnswer) {\n      case 'nggak':\n        selectedPoints = 1;\n        break;\n      case 'kentut':\n        selectedPoints = 2;\n        break;\n      case 'cairan':\n        selectedPoints = 3;\n        break;\n      default:\n        selectedPoints = 1;\n    }\n    setPoints(selectedPoints);\n    console.log('poin yang dipilih: ', selectedPoints);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!isAnswerSelected) {\n      setSnackbarOpen(true); // Set state Snackbar menjadi true\n      return;\n    }\n\n    onNext(points);\n    console.log('Nilai points:', points);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan4} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{textAlign: 'center'}}>Seberapa serem teror yang kamu alami?</h2> */}\n      {/* <h3 style={{ textAlign: 'center', fontWeight: 'bold' }}>Selain sendawa, suka ngerasa apalagi nih?</h3> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px' }}>Hawa mencekam semakin terasa. Sekarang, giliran lambungmu yang mulai diteror.\n        Kamu berteriak meminta tolong.\n        Tapi, tak ada yang datang.\n      </p>\n      <p style={{ textAlign: 'center', fontWeight: 'Bold', fontSize: isMobile ? '16px' : '18px' }}>Teror apalagi yang kamu rasakan?</p>\n      <form onSubmit={handleSubmit}>\n        {/* <form> */}\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'nggak' ? '#D32027' : 'white', padding: '10px', color: answer === 'nggak' ? 'white' : 'black', borderRadius: '25px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"nggak\" checked={answer === 'nggak'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Perut terasa kembung\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'kentut' ? '#D32027' : 'white', padding: '10px', color: answer === 'kentut' ? 'white' : 'black', borderRadius: '25px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"kentut\" checked={answer === 'kentut'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Susah buang angin\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer === 'cairan' ? '#D32027' : 'white', padding: '10px', color: answer === 'cairan' ? 'white' : 'black', borderRadius: '25px', paddingRight: '20px' }}>\n          <input type=\"radio\" name=\"answer\" value=\"cairan\" checked={answer === 'cairan'} onChange={handleAnswerChange} className=\"radio-input\" />\n          Kalo sendawa, kaya ada ‘cairan’ yang naik ke tenggorokan\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answer !== '' && answer !== 'nggak' && answer !== 'kentut' && answer !== 'cairan' ? '#D32027' : 'white', padding: '10px',\n        color: answer !== '' && answer !== 'nggak' && answer !== 'kentut' && answer !== 'cairan'? 'white' : 'black', borderRadius: '25px', paddingRight: '20px' }}>\n          <input\n            type=\"text\"\n            name=\"answer\"\n            onChange={handleAnswerChange}\n            placeholder=\"Ngerasain teror lainnya (Isi di sini)\"\n            style={{\n              width: '100%',\n              border: 'none', // Menghilangkan garis border\n              outline: 'none', // Menghilangkan outline saat diklik\n              fontSize: isMobile ? '14px' : '18px',\n              textAlign: 'center',\n              background: 'transparent'\n            }}\n          />\n        </label><br />\n        <Button type=\"submit\" style={{ ...buttonProperties, color: 'white', display: 'block', margin: '0 auto', marginTop: '50px' }}>Berikutnya</Button>\n      </form>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      />\n    </div>\n  );\n};\n\nexport default Question4;","import React, { useState } from 'react';\nimport buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\nimport { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan5 from '../../images/quizPageImages/PertanyaanImg5.jpg';\n\nconst Question5 = ({ onNext }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    const isChecked = event.target.checked;\n    setIsAnswerSelected(true);\n\n    let updatedAnswers = [...answers];\n\n    if (isChecked && !updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers.push(selectedAnswer);\n    } else if (!isChecked && updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers = updatedAnswers.filter(answer => answer !== selectedAnswer);\n    }\n\n    setAnswers(updatedAnswers);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Calculate points based on selected answers\n    let selectedPoints = 0;\n    answers.forEach(answer => {\n      switch (answer) {\n        case 'kopi':\n          selectedPoints += 1;\n          break;\n        case 'pedes':\n          selectedPoints += 1;\n          break;\n        case 'berminyak':\n          selectedPoints += 1;\n          break;\n        case 'alkohol':\n          selectedPoints += 1;\n          break;\n        case 'gurih':\n          selectedPoints += 1;\n          break;\n        default:\n          selectedPoints += 0;\n      }\n    });\n    setPoints(selectedPoints);\n\n    if (selectedPoints === 0) {\n      setSnackbarOpen(true); // Set state Snackbar menjadi true\n      return;\n    }\n\n    onNext(selectedPoints);\n    console.log('Nilai points:', selectedPoints);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan5} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{ textAlign: 'center', fontWeight: 'bold', fontSize: '20px' }}>Mana sesajen pilihan kamu?</h2> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px'}}>Sssttt….Apakah kamu mendengar sesuatu? Suara langkah kaki terdengar semakin mendekat.\n        Seseorang menyodorkan sesajen untuk ritual selanjutnya.\n        Sesajen mana yang kamu pilih?\n      </p>\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px', fontWeight: 'Bold' }}>Boleh pilih beberapa yang kamu banget.</p>\n      <form onSubmit={handleSubmit}>\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('kopi') ? '#D32027' : 'white', padding: '10px', color: answers.includes('kopi') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"kopi\" checked={answers.includes('kopi')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Kopi\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('pedes') ? '#D32027' : 'white', padding: '10px', color: answers.includes('pedes') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"pedes\" checked={answers.includes('pedes')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Yang pedes-pedes\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('berminyak') ? '#D32027' : 'white', padding: '10px', color: answers.includes('berminyak') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"berminyak\" checked={answers.includes('berminyak')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Yang berminyak\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('gurih') ? '#D32027' : 'white', padding: '10px', color: answers.includes('gurih') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"gurih\" checked={answers.includes('gurih')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Yang gurih\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('alkohol') ? '#D32027' : 'white', padding: '10px', color: answers.includes('alkohol') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"alkohol\" checked={answers.includes('alkohol')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Alkohol (kamu jahat, tapi enak..)\n        </label><br />\n        <Button type=\"submit\" style={{ ...buttonProperties, color: 'white', display: 'block', margin: '0 auto' }}>Berikutnya</Button>\n      </form>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      />\n    </div>\n  );\n};\n\nexport default Question5;\n","import React, { useState } from 'react';\nimport buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\nimport { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan6 from '../../images/quizPageImages/PertanyaanImg6.jpg';\n\nconst Question6 = ({ onNext }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    const isChecked = event.target.checked;\n    setIsAnswerSelected(true);\n\n    let updatedAnswers = [...answers];\n\n    if (isChecked && !updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers.push(selectedAnswer);\n    } else if (!isChecked && updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers = updatedAnswers.filter(answer => answer !== selectedAnswer);\n    }\n\n    setAnswers(updatedAnswers);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Calculate points based on selected answers\n    let selectedPoints = 0;\n    answers.forEach(answer => {\n      switch (answer) {\n        case 'rebahan':\n          selectedPoints += 1;\n          break;\n        case 'abnormal':\n          selectedPoints += 1;\n          break;\n        case 'berasap':\n          selectedPoints += 1;\n          break;\n        case 'overthinking':\n          selectedPoints += 1;\n          break;\n        default:\n          selectedPoints += 0;\n      }\n    });\n    setPoints(selectedPoints);\n\n    if (selectedPoints === 0) {\n      setSnackbarOpen(true); // Set state Snackbar menjadi true\n      return;\n    }\n\n    onNext(selectedPoints);\n    console.log('Nilai points:', selectedPoints);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  };\n\n  return (\n    // <div style={{ overflowY: 'auto', maxHeight: 'calc(100vh - 150px)' }}></div>\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan6} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{ textAlign: 'center', fontWeight: 'bold', fontSize: '20px' }}>Hobi kamu apasih?</h2> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px' }}>Teror tidak akan datang begitu saja.\n        Jangan-jangan kamu yang mengundang mereka.\n        Buktikan dengan ritual yang sering kamu lakukan!\n      </p>\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px', fontWeight: 'Bold' }}>Boleh pilih beberapa yang kamu banget.</p>\n      <form onSubmit={handleSubmit}>\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('rebahan') ? '#D32027' : 'white', padding: '10px', color: answers.includes('rebahan') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"rebahan\" checked={answers.includes('rebahan')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Abis makan rebahan\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('abnormal') ? '#D32027' : 'white', padding: '10px', color: answers.includes('abnormal') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"abnormal\" checked={answers.includes('abnormal')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Tidur abnormal (kurang dari 8 jam sehari)\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('berasap') ? '#D32027' : 'white', padding: '10px', color: answers.includes('berasap') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"berasap\" checked={answers.includes('berasap')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Rokok, pod, vape, kemenyan, semua yang berasap deh!\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('overthinking') ? '#D32027' : 'white', padding: '10px', color: answers.includes('overthinking') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"overthinking\" checked={answers.includes('overthinking')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Overthinking dan stres\n        </label><br />\n        <Button type=\"submit\" style={{ ...buttonProperties, color: 'white', display: 'block', margin: '0 auto' }}>Berikutnya</Button>\n      </form>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      />\n    </div>\n  );\n};\n\nexport default Question6;\n","import React, { useState } from 'react';\nimport buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\nimport { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan7 from '../../images/quizPageImages/PertanyaanImg7.jpg'\n\nconst Question7 = ({ onNext }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    const isChecked = event.target.checked;\n    setIsAnswerSelected(true);\n\n    let updatedAnswers = [...answers];\n\n    if (isChecked && !updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers.push(selectedAnswer);\n    } else if (!isChecked && updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers = updatedAnswers.filter(answer => answer !== selectedAnswer);\n    }\n\n    setAnswers(updatedAnswers);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Calculate points based on selected answers\n    let selectedPoints = 0;\n    answers.forEach(answer => {\n      switch (answer) {\n        case 'following':\n          selectedPoints += 1;\n          break;\n        case 'doi':\n          selectedPoints += 1;\n          break;\n        case 'pasangan':\n          selectedPoints += 1;\n          break;\n        case 'barang':\n          selectedPoints += 1;\n          break;\n        default:\n          selectedPoints += 0;\n      }\n    });\n    setPoints(selectedPoints);\n\n    if (selectedPoints === 0) {\n      setSnackbarOpen(true); // Set state Snackbar menjadi true\n      return;\n    }\n\n    onNext(selectedPoints);\n    console.log('Nilai points:', selectedPoints);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan7} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{ textAlign: 'center', fontWeight: 'bold', fontSize:'20px' }}>Apasih KKN (Kegiatan-Kegiatan Nyeleneh) yang  sering kamu lakuin?</h2> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px' }}>Kamu mulai mendengar suara ketukan pintu berkali-kali.\n        Pintu terbuka, dibalik cahaya yang terang, kamu melihat sosok dirimu yang lain.\n        Ternyata, sosok itu sedang melakukan uji nyali yang pernah kamu lakukan.\n        Kegiatan uji nyali apakah itu?\n      </p>\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px', fontWeight: 'Bold' }}>Boleh pilih beberapa yang kamu banget.</p>\n      <form onSubmit={handleSubmit}>\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('following') ? '#D32027' : 'white', padding: '10px', color: answers.includes('following') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"following\" checked={answers.includes('following')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Bikin fake account buat kepoin masa lalu doi\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('pasangan') ? '#D32027' : 'white', padding: '10px', color: answers.includes('pasangan') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"pasangan\" checked={answers.includes('pasangan')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Ngecek hp pasangan\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('doi') ? '#D32027' : 'white', padding: '10px', color: answers.includes('doi') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"doi\" checked={answers.includes('doi')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Begadang sampai lupa waktu\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('barang') ? '#D32027' : 'white', padding: '10px', color: answers.includes('barang') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"barang\" checked={answers.includes('barang')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Check out barang gak penting-penting amat\n        </label><br />\n        <Button type=\"submit\" style={{ ...buttonProperties, color: 'white', display: 'block', margin: '0 auto' }}>Berikutnya</Button>\n      </form>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      />\n    </div>\n  );\n};\n\nexport default Question7;","import React, { useState } from 'react';\nimport buttonProperties from '../tools/buttonProperties';\nimport './Questions.css';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@mui/material';\nimport { Button, Snackbar } from '@material-ui/core';\nimport imagePertanyaan8 from '../../images/quizPageImages/PertanyaanImg8.jpg'\n\nconst Question8 = ({ onNext }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [points, setPoints] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // State untuk mengontrol kapan Snackbar ditampilkan\n\n  const handleAnswerChange = (event) => {\n    const selectedAnswer = event.target.value;\n    const isChecked = event.target.checked;\n    setIsAnswerSelected(true);\n\n    let updatedAnswers = [...answers];\n\n    if (isChecked && !updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers.push(selectedAnswer);\n    } else if (!isChecked && updatedAnswers.includes(selectedAnswer)) {\n      updatedAnswers = updatedAnswers.filter(answer => answer !== selectedAnswer);\n    }\n\n    setAnswers(updatedAnswers);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Calculate points based on selected answers\n    let selectedPoints = 0;\n    answers.forEach(answer => {\n      switch (answer) {\n        case 'hamil':\n          selectedPoints += 1;\n          break;\n        case 'pikiran':\n          selectedPoints += 1;\n          break;\n        case 'obesitas':\n          selectedPoints += 1;\n          break;\n        case 'pencernaan':\n          selectedPoints += 1;\n          break;\n        default:\n          selectedPoints += 0;\n      }\n    });\n    setPoints(selectedPoints);\n\n    if (selectedPoints === 0) {\n      setSnackbarOpen(true); // Set state Snackbar menjadi true\n      return;\n    }\n\n    onNext(selectedPoints);\n    console.log('Nilai points:', selectedPoints);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false); // Menutup Snackbar ketika diklik\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <img src={imagePertanyaan8} alt=\"Gambar\" style={{ width: '70%', maxWidth: '400px', display: 'block', margin: '0 auto 20px' }} />\n      {/* <h2 style={{ textAlign: 'center', fontWeight: 'bold', fontSize:'20px'}}>Apa kondisi dibawah ini yang sedang kamu atau pernah kamu alami?</h2> */}\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px' }}>Setelah tertatih karena teror, kamu melihat sebuah lorong terang menuju jalan keluar.\n        Kamu perlahan berjalan ke sana, namun, ada hal yang membuat langkahmu melambat.\n      </p>\n      <p style={{ textAlign: 'center', fontSize: isMobile ? '16px' : '18px', fontWeight: 'Bold' }}>Kondisi apa yang kamu alami?</p>\n      {/* <p style={{ textAlign: 'center', fontWeight: '500' }}>Kalo nggak ada atau nggak relate<i> skip</i>, aja!</p> */}\n      <form onSubmit={handleSubmit}>\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('hamil') ? '#D32027' : 'white', padding: '10px', color: answers.includes('hamil') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"hamil\" checked={answers.includes('hamil')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Lagi hamil\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('pikiran') ? '#D32027' : 'white', padding: '10px', color: answers.includes('pikiran') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"pikiran\" checked={answers.includes('pikiran')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Lagi banyak tekanan\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('obesitas') ? '#D32027' : 'white', padding: '10px', color: answers.includes('obesitas') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"obesitas\" checked={answers.includes('obesitas')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Obesitas\n        </label><br />\n        <label style={{ textAlign: 'center', display: 'block', marginBottom: '-10px', backgroundColor: answers.includes('pencernaan') ? '#D32027' : 'white', padding: '10px', color: answers.includes('pencernaan') ? 'white' : 'black', borderRadius: '25px', paddingRight: '15px' }}>\n          <input type=\"checkbox\" name=\"answer\" value=\"pencernaan\" checked={answers.includes('pencernaan')} onChange={handleAnswerChange} className=\"checkbox-input\" />\n          Punya gangguan pencernaan\n        </label><br />\n        <Button type=\"submit\" style={{ ...buttonProperties, color: 'white', display: 'block', margin: '0 auto' }}>Berikutnya</Button>\n      </form>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen} // Menerima properti untuk menampilkan Snackbar\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message=\"Mohon pilih jawaban terlebih dahulu.\"\n      />\n    </div>\n  );\n};\n\nexport default Question8;","// QuizPage.js\n\n// This component renders the quiz page.\n// It handles navigation between quiz questions, tracks progress, and displays results.\n// Props: None\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport StepIcon from '@material-ui/core/StepIcon';\nimport LinearProgress from '@material-ui/core/LinearProgress'; // Tambahkan impor untuk LinearProgress\nimport Button from '@material-ui/core/Button';\nimport Question1 from './questions/Question1';\nimport Question2 from './questions/Question2';\nimport Question3 from './questions/Question3';\nimport Question4 from './questions/Question4';\nimport Question5 from './questions/Question5';\nimport Question6 from './questions/Question6';\nimport Question7 from './questions/Question7';\nimport Question8 from './questions/Question8';\nimport axios from 'axios';\nimport Typography from '@mui/material/Typography';\n//import progressImage from '../images/loadingProgress.png'\nimport progressImage from '../images/appImages/frashmag-logo-putih.png';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n    padding: theme.spacing(2),\n    position: 'relative',\n  },\n  stepper: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: '100px',\n  },\n  questionContainer: {\n    marginTop: theme.spacing(20), //before 25\n    padding: '0 30%',\n    [theme.breakpoints.down('sm')]: {\n      padding: '0' // Mengatur padding menjadi 0 saat lebar layar <= sm (600px)\n    }\n  },\n  centerProgressBar: {\n    width: '800%',\n    height: '50px',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  centerProgressImg: {\n    width: '500%',\n    height: 'auto',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  centerProgressText: {\n    width: '800%',\n    height: 'auto',\n    position: 'absolute',\n    top: '45%',\n    left: '150%',\n    transform: 'translate(-50%, -50%)',\n  },\n  backButton: {\n    position: 'absolute',\n    bottom: '10px',\n    left: '10px',\n  },\n}));\n\nconst QuizPage = () => {\n  // Theme and media query hooks\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [showProgressBar, setShowProgressBar] = useState(false);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [previousAnswer, setPreviousAnswer] = useState(null); // Tambahkan state untuk menyimpan jawaban sebelumnya\n  const [pointsPerQuestion, setPointsPerQuestion] = useState([0, 0, 0, 0, 0, 0, 0, 0]);\n\n  const { state } = useLocation();\n  const participantName = state ? state.participantName : '';\n\n  // Handle the completion of a quiz question\n  const handleQuestionCompletion = async (points, answer) => {\n    // Increment currentStep and update totalPoints\n    setCurrentStep((prevStep) => prevStep + 1);\n    setTotalPoints((prevPoints) => prevPoints + points);\n    const updatedTotalPoints = totalPoints + points;\n\n    // Check if all questions are completed\n    if (currentStep === 7) {\n\n      // Calculate points for the last question based on the difference between updatedTotalPoints and the sum of pointsPerQuestion\n      const pointsForLastQuestion = updatedTotalPoints - pointsPerQuestion.reduce((acc, val) => acc + val, 0);\n      const updatedPointsPerQuestion = [...pointsPerQuestion];\n      updatedPointsPerQuestion[currentStep] = pointsForLastQuestion;\n\n      // If all questions are completed, update state and send scores to the server\n      setIsCompleted(true);\n      setShowProgressBar(true);\n\n      try {\n        // Send scores to the server\n        const response = await axios.post('https://teror-webapp-server.onrender.com/api/scores', {\n          name: participantName,\n          points: updatedTotalPoints,\n          // Pass points per question to the server\n          pointsPerQuestion: updatedPointsPerQuestion,\n        });\n\n        // Log success or failure of score submission\n        if (response.status === 200) {\n          console.log('Poin berhasil disimpan ke database');\n        } else {\n          console.error('Gagal menyimpan poin');\n        }\n      } catch (error) {\n        // Log error if score submission fails\n        console.error('Gagal menyimpan poin:', error.message);\n      }\n\n      // Navigate to the result page after a delay\n      setTimeout(() => {\n        navigate('/result-page', { state: { participantName: participantName, totalPoints: updatedTotalPoints } });\n      }, 3000);\n    } else {\n      setPreviousAnswer(answer);\n      setPointsPerQuestion((prevPoints) => {\n        const newPoints = [...prevPoints];\n        newPoints[currentStep] = points;\n        console.log(\"current step\", currentStep); // Add this line for debugging\n        console.log(\"New points per question array:\", newPoints); // Add this line for debugging\n\n        // Update scores on the server for every question completion\n        try {\n          axios.post('https://teror-webapp-server.onrender.com/api/scores', {\n            name: participantName,\n            points: updatedTotalPoints,\n            pointsPerQuestion: newPoints,\n          }).then((response) => {\n            if (response.status === 200) {\n              console.log('Poin berhasil disimpan ke database');\n            } else {\n              console.error('Gagal menyimpan poin');\n            }\n          });\n        } catch (error) {\n          console.error('Gagal menyimpan poin:', error.message);\n        }\n\n        return newPoints;\n      });\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n      setTotalPoints((prevTotal) => prevTotal - pointsPerQuestion[currentStep - 1]);\n    }\n  };\n\n  const steps = ['', '', '', '', '', '', '', ''];\n\n  const questionComponents = [\n    <Question1 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />,\n    <Question2 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />,\n    <Question3 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />,\n    <Question4 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />,\n    <Question5 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />,\n    <Question6 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />,\n    <Question7 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />,\n    <Question8 onNext={handleQuestionCompletion} onPrevious={handlePrevious} />\n  ];\n\n  // Use custom ImageStepIcon component to render step icons with different colors\n  const ImageStepIcon = ({ active, completed }) => {\n    // Determine image source based on step status\n    const imageSrc = active ? 'progressRed.png' : completed ? 'progressRed.png' : 'progressWhite.png';\n    return (\n      // Render the image with appropriate width and height\n      <img src={imageSrc} alt=\"\" style={{ width: isMobile ? '10px' : '20px', height: 'auto' }} />\n    );\n  };\n\n  const styles = {\n    colorPrimary: {\n      backgroundColor: 'white', // Override progress bar color\n    },\n    barColorPrimary: {\n      backgroundColor: 'red', // Override buffer bar color (if applicable)\n    },\n  };\n\n  const StyledLinearProgress = withStyles(styles)(LinearProgress);\n\n  const QontoConnector = withStyles({\n    alternativeLabel: {\n      top: isMobile ? 8 : 9,\n      left: isMobile ? 'calc(-50% + 6px)' : 'calc(-50% + 16px)',\n      right: isMobile ? 'calc(50% + 6px)' : 'calc(50% + 16px)',\n    },\n    active: {\n      '& $line': {\n        borderColor: '#D51A1A',\n      },\n    },\n    completed: {\n      '& $line': {\n        borderColor: '#D51A1A',\n      },\n    },\n    line: {\n      borderColor: '#fff',\n      borderTopWidth: 2,\n      borderRadius: 1,\n      width: isMobile ? 'calc(100% + 10px)' : 'calc(100% + 32px)',\n      marginLeft: isMobile ? '-2px' : '-7px',\n    },\n  })(StepConnector);\n\n\n  useEffect(() => {\n    let interval;\n    if (isCompleted && showProgressBar) {\n      interval = setInterval(() => {\n        setProgress((prevProgress) => {\n          if (prevProgress === 100) {\n            clearInterval(interval);\n          }\n\n          let diff;\n\n          // Slow down the progress when it's almost complete (90% or more)\n          if (prevProgress >= 90) {\n            diff = Math.random() * 5; // Slower increment\n          } else {\n            diff = Math.random() * 50; // Faster increment\n          }\n\n          return Math.min(prevProgress + diff, 100);\n        });\n      }, 500); // Update progress value every 500 milliseconds\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isCompleted, showProgressBar]);\n\n  const shouldRenderStepper = !isCompleted;\n\n  return (\n    <div className={classes.root}>\n      {shouldRenderStepper && (\n        <Stepper activeStep={currentStep} className={classes.stepper} alternativeLabel connector={<QontoConnector />}>\n          {steps.map((label, index) => (\n            <Step key={index}>\n              <StepIcon\n                icon={<ImageStepIcon active={index === currentStep} completed={index < currentStep} />}\n              />\n            </Step>\n          ))}\n        </Stepper>\n      )}\n      <div className={classes.questionContainer}>\n        {questionComponents[currentStep]}\n        {currentStep > 0 && !isCompleted && (\n          <Button variant=\"outlined\"\n            color=\"primary\"\n            className={classes.backButton} onClick={handlePrevious}\n            style={{\n              borderRadius: '30px',\n              color: 'white',\n              borderColor: 'white',\n              width: 'auto',\n              height: 'auto',\n              fontSize: '10px',\n              marginLeft: '30px'\n            }}>Sebelumnya\n          </Button>\n        )}\n      </div>\n      {isCompleted && showProgressBar && (\n        <div>\n          <Typography\n            className={classes.centerProgressText}>\n            Menunggu proses ritual\n          </Typography>\n          <StyledLinearProgress\n            variant=\"determinate\"\n            value={progress}\n            className={classes.centerProgressBar} />\n          <img src={progressImage} className={classes.centerProgressImg} alt='LoadingProgress' />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuizPage;\n"],"names":["_ref","onNext","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","points","setPoints","useState","answer","setAnswer","isAnswerSelected","setIsAnswerSelected","useEffect","handleAnswerChange","event","selectedAnswer","target","value","selectedPoints","console","log","_jsxs","style","padding","children","_jsx","src","imagePertanyaan1","alt","width","maxWidth","display","margin","textAlign","fontSize","fontWeight","marginBottom","backgroundColor","color","borderRadius","paddingRight","type","name","checked","onChange","className","onPrevious","imagePertanyaan2","imagePertanyaan3","snackbarOpen","setSnackbarOpen","imagePertanyaan4","onSubmit","preventDefault","placeholder","border","outline","background","Button","buttonProperties","marginTop","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleSnackbarClose","message","answers","setAnswers","isChecked","updatedAnswers","includes","push","filter","imagePertanyaan5","forEach","imagePertanyaan6","imagePertanyaan7","imagePertanyaan8","useStyles","makeStyles","root","flexDirection","alignItems","justifyContent","minHeight","spacing","position","stepper","top","questionContainer","centerProgressBar","height","left","transform","centerProgressImg","centerProgressText","backButton","bottom","QuizPage","classes","navigate","useNavigate","currentStep","setCurrentStep","isCompleted","setIsCompleted","showProgressBar","setShowProgressBar","totalPoints","setTotalPoints","progress","setProgress","previousAnswer","setPreviousAnswer","pointsPerQuestion","setPointsPerQuestion","state","useLocation","participantName","handleQuestionCompletion","async","prevStep","prevPoints","updatedTotalPoints","pointsForLastQuestion","reduce","acc","val","updatedPointsPerQuestion","axios","post","status","error","setTimeout","newPoints","then","response","handlePrevious","prevTotal","questionComponents","Question1","Question2","Question3","Question4","Question5","Question6","Question7","Question8","ImageStepIcon","active","completed","imageSrc","StyledLinearProgress","withStyles","colorPrimary","barColorPrimary","LinearProgress","QontoConnector","alternativeLabel","right","borderColor","line","borderTopWidth","marginLeft","StepConnector","interval","setInterval","prevProgress","diff","clearInterval","Math","random","min","shouldRenderStepper","Stepper","activeStep","connector","map","label","index","Step","StepIcon","icon","variant","onClick","Typography","progressImage"],"sourceRoot":""}